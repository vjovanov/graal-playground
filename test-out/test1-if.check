===== AFTER_PARSING (required)
0|StartNode { stamp=Dependency, probability=0.0,  }(3)
1|Local(0) { stamp=a!# Lplayground/GraphBuilder$$anonfun$2;, index=0,  }()
2|Local(1) { stamp=i, index=1,  }()
playground.GraphBuilder$$anonfun$2.apply$mcII$sp(GraphConstruction.scala:50) [bci: 0]
locals: [_, 2]
stack: []
locks: []
(2)
4|Const(0) { stamp=i [0] #0, rawvalue=0, value=int[0|0x0],  }()
5|< { stamp=Condition,  }(4,2)
7|Begin { stamp=Dependency, probability=0.0,  }()
9|Begin { stamp=Dependency, probability=0.0,  }()
10|If { trueSuccessorProbability=0.5, stamp=Void, probability=0.0,  }(5)
11|Const(1) { stamp=i [1] #1, rawvalue=1, value=int[1|0x1],  }()
13|Const(-1) { stamp=i [-1], rawvalue=-1, value=int[-1|0xffffffffffffffff],  }()
14|EndNode { stamp=Void, probability=0.0,  }()
15|Merge { stamp=Dependency, probability=0.0,  }(18,14,16)
16|EndNode { stamp=Void, probability=0.0,  }()
17|Phi(11 13) { stamp=i, type=Value,  }(15,11,13)
playground.GraphBuilder$$anonfun$2.apply$mcII$sp(GraphConstruction.scala:50) [bci: 10]
locals: [_, _]
stack: [17]
locks: []
(17)
20|Return { stamp=Void, probability=0.0,  }(17)
----- AFTER_PARSING (required) method calls 
===== AFTER_PARSING 
0|StartNode { stamp=Dependency, probability=0.0,  }(3)
1|Local(0) { stamp=a!# Lplayground/GraphBuilder$$anonfun$2;, index=0,  }()
2|Local(1) { stamp=i, index=1,  }()
playground.GraphBuilder$$anonfun$2.apply$mcII$sp(GraphConstruction.scala:50) [bci: 0]
locals: [_, 2]
stack: []
locks: []
(2)
4|Const(0) { stamp=i [0] #0, rawvalue=0, value=int[0|0x0],  }()
5|< { stamp=Condition,  }(2,4)
7|Begin { stamp=Dependency, probability=0.0,  }()
9|Begin { stamp=Dependency, probability=0.0,  }()
10|If { trueSuccessorProbability=0.5, stamp=Void, probability=0.0,  }(5)
11|Const(1) { stamp=i [1] #1, rawvalue=1, value=int[1|0x1],  }()
13|Const(-1) { stamp=i [-1], rawvalue=-1, value=int[-1|0xffffffffffffffff],  }()
14|EndNode { stamp=Void, probability=0.0,  }()
15|Merge { stamp=Dependency, probability=0.0,  }(18,14,16)
16|EndNode { stamp=Void, probability=0.0,  }()
17|Phi(11 13) { stamp=i, type=Value,  }(15,11,13)
playground.GraphBuilder$$anonfun$2.apply$mcII$sp(GraphConstruction.scala:50) [bci: 10]
locals: [_, 2]
stack: [17]
locks: []
(2,17)
19|Return { stamp=Void, probability=0.0,  }(17)
----- AFTER_PARSING  method calls 
===== AFTER_PARSING (dead-code)
0|StartNode { stamp=Dependency, probability=0.0,  }(3)
1|Local(0) { stamp=a!# Lplayground/GraphBuilder$$anonfun$2;, index=0,  }()
2|Local(1) { stamp=i, index=1,  }()
playground.GraphBuilder$$anonfun$2.apply$mcII$sp(GraphConstruction.scala:50) [bci: 0]
locals: [_, 2]
stack: []
locks: []
(2)
4|Const(0) { stamp=i [0] #0, rawvalue=0, value=int[0|0x0],  }()
5|< { stamp=Condition,  }(2,4)
7|Begin { stamp=Dependency, probability=0.0,  }()
9|Begin { stamp=Dependency, probability=0.0,  }()
10|If { trueSuccessorProbability=0.5, stamp=Void, probability=0.0,  }(5)
11|Const(1) { stamp=i [1] #1, rawvalue=1, value=int[1|0x1],  }()
13|Const(-1) { stamp=i [-1], rawvalue=-1, value=int[-1|0xffffffffffffffff],  }()
14|EndNode { stamp=Void, probability=0.0,  }()
15|Merge { stamp=Dependency, probability=0.0,  }(18,14,16)
16|EndNode { stamp=Void, probability=0.0,  }()
17|Phi(11 13) { stamp=i, type=Value,  }(15,11,13)
playground.GraphBuilder$$anonfun$2.apply$mcII$sp(GraphConstruction.scala:50) [bci: 10]
locals: [_, 2]
stack: [17]
locks: []
(2,17)
19|Return { stamp=Void, probability=0.0,  }(17)
----- AFTER_PARSING (dead-code) method calls 
===== HIGH_LEVEL
0|StartNode(3)
2|Local(1)()
3|FrameState@0(2)
4|Const(0)()
5|<(2,4)
11|Const(1)()
13|Const(-1)()
19|Return(20)
20|Conditional(13,11,5)
21|LogicConstant()
22|LogicConstant()
----- HIGH_LEVEL method calls 
===== MID_LEVEL
0|StartNode(3)
2|Local(1)()
3|FrameState@0(2)
4|Const(0)()
5|<(2,4)
11|Const(1)()
13|Const(-1)()
19|Return(20)
20|Conditional(13,11,5)
23|LogicConstant()
24|LogicConstant()
----- MID_LEVEL method calls 
Scope Playground
===== FINAL
0|StartNode(3)
2|Local(1)()
3|FrameState@0(2)
4|Const(0)()
5|<(2,4)
11|Const(1)()
13|Const(-1)()
19|Return(20)
20|Conditional(13,11,5)
23|LogicConstant()
24|LogicConstant()
----- FINAL method calls 
===== DONE
===== AFTER_PARSING (required)
0|StartNode { stamp=Dependency, probability=0.0,  }(3)
1|Local(0) { stamp=a!# Lplayground/GraphBuilder$$anonfun$2;, index=0,  }()
2|Local(1) { stamp=i, index=1,  }()
playground.GraphBuilder$$anonfun$2.apply$mcII$sp(GraphConstruction.scala:50) [bci: 0]
locals: [_, 2]
stack: []
locks: []
(2)
4|Const(0) { stamp=i [0] #0, rawvalue=0, value=int[0|0x0],  }()
5|< { stamp=Condition,  }(4,2)
7|Begin { stamp=Dependency, probability=0.0,  }()
9|Begin { stamp=Dependency, probability=0.0,  }()
10|If { trueSuccessorProbability=0.5, stamp=Void, probability=0.0,  }(5)
11|Const(1) { stamp=i [1] #1, rawvalue=1, value=int[1|0x1],  }()
13|Const(-1) { stamp=i [-1], rawvalue=-1, value=int[-1|0xffffffffffffffff],  }()
14|EndNode { stamp=Void, probability=0.0,  }()
15|Merge { stamp=Dependency, probability=0.0,  }(18,14,16)
16|EndNode { stamp=Void, probability=0.0,  }()
17|Phi(11 13) { stamp=i, type=Value,  }(15,11,13)
playground.GraphBuilder$$anonfun$2.apply$mcII$sp(GraphConstruction.scala:50) [bci: 10]
locals: [_, _]
stack: [17]
locks: []
(17)
20|Return { stamp=Void, probability=0.0,  }(17)
----- AFTER_PARSING (required) method calls 
===== AFTER_PARSING 
0|StartNode { stamp=Dependency, probability=0.0,  }(3)
1|Local(0) { stamp=a!# Lplayground/GraphBuilder$$anonfun$2;, index=0,  }()
2|Local(1) { stamp=i, index=1,  }()
playground.GraphBuilder$$anonfun$2.apply$mcII$sp(GraphConstruction.scala:50) [bci: 0]
locals: [_, 2]
stack: []
locks: []
(2)
4|Const(0) { stamp=i [0] #0, rawvalue=0, value=int[0|0x0],  }()
5|< { stamp=Condition,  }(2,4)
7|Begin { stamp=Dependency, probability=0.0,  }()
9|Begin { stamp=Dependency, probability=0.0,  }()
10|If { trueSuccessorProbability=0.5, stamp=Void, probability=0.0,  }(5)
11|Const(1) { stamp=i [1] #1, rawvalue=1, value=int[1|0x1],  }()
13|Const(-1) { stamp=i [-1], rawvalue=-1, value=int[-1|0xffffffffffffffff],  }()
14|EndNode { stamp=Void, probability=0.0,  }()
15|Merge { stamp=Dependency, probability=0.0,  }(18,14,16)
16|EndNode { stamp=Void, probability=0.0,  }()
17|Phi(11 13) { stamp=i, type=Value,  }(15,11,13)
playground.GraphBuilder$$anonfun$2.apply$mcII$sp(GraphConstruction.scala:50) [bci: 10]
locals: [_, 2]
stack: [17]
locks: []
(2,17)
19|Return { stamp=Void, probability=0.0,  }(17)
----- AFTER_PARSING  method calls 
===== AFTER_PARSING (dead-code)
0|StartNode { stamp=Dependency, probability=0.0,  }(3)
1|Local(0) { stamp=a!# Lplayground/GraphBuilder$$anonfun$2;, index=0,  }()
2|Local(1) { stamp=i, index=1,  }()
playground.GraphBuilder$$anonfun$2.apply$mcII$sp(GraphConstruction.scala:50) [bci: 0]
locals: [_, 2]
stack: []
locks: []
(2)
4|Const(0) { stamp=i [0] #0, rawvalue=0, value=int[0|0x0],  }()
5|< { stamp=Condition,  }(2,4)
7|Begin { stamp=Dependency, probability=0.0,  }()
9|Begin { stamp=Dependency, probability=0.0,  }()
10|If { trueSuccessorProbability=0.5, stamp=Void, probability=0.0,  }(5)
11|Const(1) { stamp=i [1] #1, rawvalue=1, value=int[1|0x1],  }()
13|Const(-1) { stamp=i [-1], rawvalue=-1, value=int[-1|0xffffffffffffffff],  }()
14|EndNode { stamp=Void, probability=0.0,  }()
15|Merge { stamp=Dependency, probability=0.0,  }(18,14,16)
16|EndNode { stamp=Void, probability=0.0,  }()
17|Phi(11 13) { stamp=i, type=Value,  }(15,11,13)
playground.GraphBuilder$$anonfun$2.apply$mcII$sp(GraphConstruction.scala:50) [bci: 10]
locals: [_, 2]
stack: [17]
locks: []
(2,17)
19|Return { stamp=Void, probability=0.0,  }(17)
----- AFTER_PARSING (dead-code) method calls 
===== HIGH_LEVEL
0|StartNode(3)
2|Local(1)()
3|FrameState@0(2)
4|Const(0)()
5|<(2,4)
11|Const(1)()
13|Const(-1)()
19|Return(20)
20|Conditional(13,11,5)
21|LogicConstant()
22|LogicConstant()
----- HIGH_LEVEL method calls 
===== MID_LEVEL
0|StartNode(3)
2|Local(1)()
3|FrameState@0(2)
4|Const(0)()
5|<(2,4)
11|Const(1)()
13|Const(-1)()
19|Return(20)
20|Conditional(13,11,5)
23|LogicConstant()
24|LogicConstant()
----- MID_LEVEL method calls 
Scope Playground
===== FINAL
0|StartNode(3)
2|Local(1)()
3|FrameState@0(2)
4|Const(0)()
5|<(2,4)
11|Const(1)()
13|Const(-1)()
19|Return(20)
20|Conditional(13,11,5)
23|LogicConstant()
24|LogicConstant()
----- FINAL method calls 
===== DONE
